==12817== Memcheck, a memory error detector
==12817== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12817== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==12817== Command: ../bl_client test-07-serv Clark
==12817== 
==12817== Syscall param write(buf) points to uninitialised byte(s)
==12817==    at 0x4E4D281: write (write.c:27)
==12817==    by 0x109209: main (bl_client.c:95)
==12817==  Address 0x1ffeffecc6 is on thread 1's stack
==12817==  in frame #1, created by main (bl_client.c:62)
==12817== 
-- Clark JOINED --
[Bruce] : Hello
Clark>>Yo==12817== Thread 2:
==12817== Syscall param write(buf) points to uninitialised byte(s)
==12817==    at 0x4E4D2B7: write (write.c:27)
==12817==    by 0x108E3B: user_thread_func (bl_client.c:28)
==12817==    by 0x4E436DA: start_thread (pthread_create.c:463)
==12817==    by 0x517C88E: clone (clone.S:95)
==12817==  Address 0x5c4b9ea is on thread 2's stack
==12817==  in frame #1, created by user_thread_func (bl_client.c:14)
==12817== 
[Clark] : Yo
[Bruce] : bye
-- Bruce DEPARTED --
[Clark] : guess I'm all alone
[Clark] : this is lame
Clark>>==12817== Syscall param write(buf) points to uninitialised byte(s)
==12817==    at 0x4E4D2B7: write (write.c:27)
==12817==    by 0x108E85: user_thread_func (bl_client.c:35)
==12817==    by 0x4E436DA: start_thread (pthread_create.c:463)
==12817==    by 0x517C88E: clone (clone.S:95)
==12817==  Address 0x5c4b9ea is on thread 2's stack
==12817==  in frame #1, created by user_thread_func (bl_client.c:14)
==12817== 
-- Clark DEPARTED --
Clark>>==12817== 
==12817== HEAP SUMMARY:
==12817==     in use at exit: 0 bytes in 0 blocks
==12817==   total heap usage: 8 allocs, 8 frees, 6,334 bytes allocated
==12817== 
==12817== All heap blocks were freed -- no leaks are possible
==12817== 
==12817== For counts of detected and suppressed errors, rerun with: -v
==12817== Use --track-origins=yes to see where uninitialised values come from
==12817== ERROR SUMMARY: 5 errors from 3 contexts (suppressed: 0 from 0)
